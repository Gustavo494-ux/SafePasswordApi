definitions:
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        description: Password   string    `json:"password,omitempty" db:"safepassword,omitempty"`
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  models.UserLogin:
    properties:
      Email:
        type: string
      Password:
        type: string
    type: object
  models.UserRegister:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact:
    email: gustavogama494@gmail.com
    name: Gustavo Gama
    url: https://www.linkedin.com/in/gustavo-gama-966b341b8/
  description: |-
    SafePasswordApi é uma API de gerenciamento de senhas com criptografia integral,
    proporcionando armazenamento e acesso seguros para dados sensíveis de usuários,
    por meio de métodos eficientes de manipulação de senhas.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SafePasswordApi
  version: "0.1"
paths:
  /Login:
    post:
      consumes:
      - application/json
      description: Performs user login based on provided credentials
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "202":
          description: Successful login
          schema:
            $ref: '#/definitions/models.LoginResponse'
      summary: Performs user login
      tags:
      - Authentication
  /user:
    post:
      consumes:
      - application/json
      description: Performs user login based on provided credentials
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "202":
          description: Successful register
          schema:
            $ref: '#/definitions/models.User'
      summary: Performs user registration.
      tags:
      - User
swagger: "2.0"
